import React, { useState } from 'react';
import { useAuth } from '../contexts/AuthContext';
import { useLanguage } from '../contexts/LanguageContext';
import DashboardHome from './DashboardHome';
import TransactionForm from './TransactionForm';
import TransactionHistory from './TransactionHistory';
import LanguageSwitcher from './LanguageSwitcher';

const MainLayout: React.FC = () => {
    const { user, logout } = useAuth();
    const { t } = useLanguage();
    const [activeView, setActiveView] = useState('dashboard');

    const renderView = () => {
        switch (activeView) {
            case 'dashboard':
                return <DashboardHome />;
            case 'newTransaction':
                return <TransactionForm />;
            case 'history':
                return <TransactionHistory />;
            default:
                return <DashboardHome />;
        }
    };

    const navItems = [
        { id: 'dashboard', label: t('dashboard'), icon: 'HomeIcon' },
        { id: 'newTransaction', label: t('newTransaction'), icon: 'PlusCircleIcon' },
        { id: 'history', label: t('transactionHistory'), icon: 'ClockIcon' },
    ];
    
    const Icon = ({ name }: { name: string }) => {
        const icons: { [key: string]: React.ReactNode } = {
          HomeIcon: <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6"><path strokeLinecap="round" strokeLinejoin="round" d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" /></svg>,
          PlusCircleIcon: <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6"><path strokeLinecap="round" strokeLinejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>,
          ClockIcon: <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6"><path strokeLinecap="round" strokeLinejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>,
        };
        return <>{icons[name]}</>;
      };

    return (
        <div className="flex h-screen bg-gray-100">
            {/* Sidebar */}
            <aside className="w-64 bg-brand-dark text-white flex flex-col">
                <div className="h-20 flex items-center justify-center text-2xl font-bold">
                    {t('appName')}
                </div>
                <nav className="flex-1 px-4 py-4 space-y-2">
                    {navItems.map(item => (
                        <button
                            key={item.id}
                            onClick={() => setActiveView(item.id)}
                            className={`w-full flex items-center px-4 py-2 text-left rounded-lg transition-colors duration-200 ${
                                activeView === item.id
                                    ? 'bg-brand-primary text-white'
                                    : 'hover:bg-gray-700'
                            }`}
                        >
                             <Icon name={item.icon} />
                            <span className="ml-4">{item.label}</span>
                        </button>
                    ))}
                </nav>
            </aside>

            {/* Main content */}
            <div className="flex-1 flex flex-col overflow-hidden">
                <header className="flex justify-between items-center p-4 bg-white border-b">
                    <div>
                        <h1 className="text-2xl font-semibold text-gray-800">
                           {navItems.find(i => i.id === activeView)?.label}
                        </h1>
                    </div>
                    <div className="flex items-center space-x-4">
                        <LanguageSwitcher />
                        <div className="text-right">
                            <p className="font-semibold">{user?.name}</p>
                            <p className="text-sm text-gray-500">{user?.role}</p>
                        </div>
                        <button onClick={logout} className="p-2 rounded-full hover:bg-gray-200" title={t('logout')}>
                           <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6 text-gray-600"><path strokeLinecap="round" strokeLinejoin="round" d="M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75" /></svg>
                        </button>
                    </div>
                </header>
                <main className="flex-1 overflow-x-hidden overflow-y-auto bg-gray-100 p-6">
                    {renderView()}
                </main>
            </div>
        </div>
    );
};

export default MainLayout;